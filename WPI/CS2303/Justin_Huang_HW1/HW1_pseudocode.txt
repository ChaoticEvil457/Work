include standard input/output

int main(void){
    define variable for user year input
    define variable for days in the month
    define variable for skipping days       //skip 0 for Sunday, skip 6 for Saturday, 
                                            //starts at 3 b/c it's the start date for 2020
    while(user input is invalid){ //2020 to 2030
    get a year from the user
    print an error message if the input is invalid
    }
    add user input year - 2020 to skipped days (one extra skipped day per year after )
    run for each leap year before the input year{
        add 1 to skipped days // extra day for each leap year
    }
    while skipped days>6 { // prevents overflow
            subtract 7 from skipped days //6 is Saturday, so at 7, this would set you to 0, aka Sunday
        }


    run 12 times{
        switch(month){ // depending on what month it is, prints out a month and sets days in a month
            case 0: January, print January, set days in month variable to 31 
            case 1: Febuary, print Febuary, set days in month variable to 28
            if date is 2020, 2024, or 2028, set variable to 29      //leap year
            ...
        }
        print calendar settup pieces    //make it look nice

        run (number of skipped days) times{
            print spaces
        }

        run (days in month) times{
            if(end of line){
                print new line
            }
            print run number //date
        }
        
        set skipped days to days in month - 28 + skipped days //skips all days in the last set of 7 in a month
                //Just some more explination: the way I made this work is by looking at a month as 7 U 7 U 7 U 7 U 7
                //and then you subtract the first 4 sets from the total days in the month (because all months are <= 28 days)
                //afterwards, because you know that the numbers in the last set are split between the months 
                //(no months are 35 days) you can then take the final answer and add it to skipped days
        if skipped days>6 { // prevents overflow (7 days in a week, if skipped = 7, skipped should be 0 for Sunday)
            subtract 7 from skipped days
        }
    }
}